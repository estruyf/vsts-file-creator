"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var create_1 = require("./create");
var args = require("../../lib/arguments");
var colors = require("colors");
var extBase = require("./default");
var publishUtils = require("./_lib/publish");
var trace = require("../../lib/trace");
function getCommand(args) {
    return new ExtensionPublish(args);
}
exports.getCommand = getCommand;
var ExtensionPublish = /** @class */ (function (_super) {
    __extends(ExtensionPublish, _super);
    function ExtensionPublish() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = "Publish a Visual Studio Marketplace Extension.";
        _this.serverCommand = true;
        return _this;
    }
    ExtensionPublish.prototype.getHelpArgs = function () {
        return [
            "root",
            "manifests",
            "manifestGlobs",
            "json5",
            "override",
            "overridesFile",
            "bypassValidation",
            "publisher",
            "extensionId",
            "outputPath",
            "locRoot",
            "vsix",
            "shareWith",
            "noWaitValidation",
            "metadataOnly",
        ];
    };
    ExtensionPublish.prototype.setCommandArgs = function () {
        _super.prototype.setCommandArgs.call(this);
        this.registerCommandArgument("serviceUrl", "Market URL", "URL to the VSS Marketplace.", args.StringArgument, extBase.ExtensionBase.getMarketplaceUrl);
    };
    ExtensionPublish.prototype.exec = function () {
        return __awaiter(this, void 0, void 0, function () {
            var galleryApi, result, publishSettings, extensionCreatePromise, _a, mergeSettings, packageSettings, createdExtension, packagePublisher, publishedExtension, sharingMgr;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.getGalleryApi()];
                    case 1:
                        galleryApi = _b.sent();
                        result = {};
                        return [4 /*yield*/, this.getPublishSettings()];
                    case 2:
                        publishSettings = _b.sent();
                        if (!publishSettings.vsixPath) return [3 /*break*/, 3];
                        result.packaged = null;
                        return [3 /*break*/, 6];
                    case 3: return [4 /*yield*/, Promise.all([this.getMergeSettings(), this.getPackageSettings()])];
                    case 4:
                        _a = _b.sent(), mergeSettings = _a[0], packageSettings = _a[1];
                        return [4 /*yield*/, create_1.createExtension(mergeSettings, packageSettings)];
                    case 5:
                        createdExtension = _b.sent();
                        result.packaged = createdExtension.path;
                        publishSettings.vsixPath = createdExtension.path;
                        _b.label = 6;
                    case 6:
                        packagePublisher = new publishUtils.PackagePublisher(publishSettings, galleryApi);
                        return [4 /*yield*/, packagePublisher.publish()];
                    case 7:
                        publishedExtension = _b.sent();
                        result.published = true;
                        if (!(publishSettings.shareWith && publishSettings.shareWith.length >= 0)) return [3 /*break*/, 9];
                        sharingMgr = new publishUtils.SharingManager(publishSettings, galleryApi);
                        return [4 /*yield*/, sharingMgr.shareWith(publishSettings.shareWith)];
                    case 8:
                        _b.sent();
                        result.shared = publishSettings.shareWith;
                        return [3 /*break*/, 10];
                    case 9:
                        result.shared = null;
                        _b.label = 10;
                    case 10: return [2 /*return*/, result];
                }
            });
        });
    };
    ExtensionPublish.prototype.friendlyOutput = function (data) {
        trace.info(colors.green("\n=== Completed operation: publish extension ==="));
        var packagingStr = data.packaged ? colors.green(data.packaged) : colors.yellow("not packaged (existing package used)");
        var publishingStr = data.published ? colors.green("success") : colors.yellow("???");
        var sharingStr = data.shared
            ? "shared with " + data.shared.map(function (s) { return colors.green(s); }).join(", ")
            : colors.yellow("not shared (use --share-with to share)");
        trace.info(" - Packaging: %s", packagingStr);
        trace.info(" - Publishing: %s", publishingStr);
        trace.info(" - Sharing: %s", sharingStr);
    };
    return ExtensionPublish;
}(extBase.ExtensionBase));
exports.ExtensionPublish = ExtensionPublish;
//# sourceMappingURL=publish.js.map